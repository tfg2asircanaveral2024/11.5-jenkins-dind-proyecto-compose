# un Jenkins configurado automáticamente que se conecta a un DinD, ahora funciona bien
services:
  servidor-jenkins:
    image: tfg2asircanaveral2024/jenkins:base-jcasc-docker-cli
    ports:
      - 8080:8080
    # el usuario tiene que ser root por los permisos de los ficheros para SSH
    user: "0"
    hostname: ${NOMBRE_SERVIDOR:-servidor-jenkins}
    volumes:
      - ./jenkins-casc:/var/jenkins_home/jenkins-casc
      - ./contenido-ssh:/contenido-ssh
      - certs-cliente:/certs:ro
      - /var/jenkins_home:/var/jenkins_home
    environment:
       - CASC_JENKINS_CONFIG=/var/jenkins_home/jenkins-casc/jenkins-casc.yml
       - DOCKER_HOST=tcp://docker:2376
       - DOCKER_CERT_PATH=/certs
       - DOCKER_TLS_VERIFY=1
       # credenciales para publicar la imagen creada en Docker Hub, sustituye el contenido con tus datos
       - USUARIO_DOCKERHUB=${USUARIO_DOCKERHUB}
       - PASSWORD_DOCKERHUB=${PASSWORD_DOCKERHUB}
       #- JENKINS_NOMBRE_ADMINISTRADOR=nombre-administrador
       # lógicamente, no deberías escribir la contraseña en texto plano, sino usar una variable 
       # de entorno
       #- JENKINS_PASSWORD_ADMINISTRADOR=${PASSWORD_ADMINISTRADOR}
    networks:
      - red-1
  
  docker:
    image: docker:dind
    privileged: true
    user: "0"
    volumes:
      - certs-cliente:/certs/client
      - /var/jenkins_home:/var/jenkins_home
    networks:
      - red-1

networks:
  red-1:
    driver: bridge

volumes:
  certs-cliente: